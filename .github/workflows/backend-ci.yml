name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

permissions:
  contents: read
  pull-requests: read

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sgvn_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 15

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install
        run: npm ci

      - name: Wait & create DB
        env: { PGPASSWORD: postgres }
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then break; fi
            echo "Aguardando Postgres ($i/30)..." && sleep 2
          done
          psql -h 127.0.0.1 -U postgres -tc "SELECT 1 FROM pg_database WHERE datname='sgvn_test'" | grep -q 1 || \
          psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE sgvn_test;"

      - name: Test (coverage)
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/sgvn_test
          TEST_DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/sgvn_test
          CLERK_SECRET_KEY: test_secret_key
          CLERK_PUBLISHABLE_KEY: test_publishable_key
        run: npm run test:ci

      - name: SonarCloud Scan
        if: ${{ success() || failure() }}
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Codecov
        if: ${{ success() || failure() }}
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: |
            backend/coverage/
            backend/test-results/
