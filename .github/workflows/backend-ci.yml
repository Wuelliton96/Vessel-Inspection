name: Backend CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Sobe um Postgres para os testes
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js v20 com cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Instalar dependências
        run: npm ci

      # Define variáveis de teste para o job inteiro
      - name: Definir variáveis de ambiente de teste
        run: |
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/app_test" >> $GITHUB_ENV
          # Adicione aqui outras variáveis necessárias pelos testes, se houver:
          # echo "JWT_SECRET=ci-secret" >> $GITHUB_ENV

      # (Opcional) criar .env a partir de exemplo — mantém, mas agora não dependemos dele
      - name: Criar arquivo de ambiente (.env)
        run: if [ -f ".env.example" ]; then cp .env.example .env; fi

      - name: Verificar qualidade do código (Lint)
        run: npm run lint --if-present

      # Executa migrações antes dos testes (se você usa sequelize-cli)
      - name: Rodar migrações (se existirem)
        run: npx --yes sequelize-cli db:migrate || echo "Sem migrations"

      # Testes com cobertura (não falha se não houver testes)
      - name: Rodar testes com cobertura
        run: npm run test:coverage -- --passWithNoTests --runInBand

      - name: Buildar a aplicação
        run: npm run build --if-present